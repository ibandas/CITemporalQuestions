;; Who teaches cs 348 in the fall quarter of 2020?
;; What time is cs 348 in the fall quarter of 2020?

;; Fall - Season
;; Year - 2020
;; teaches -> Instructor
;; cs 348 - course
;; quarter - AcademicQuarter


(in-microtheory TemporalQuestions-NFMt)

(isa WhoTeachesCourseQuarter Collection)
(genls WhoTeachesCourseQuarter AcademicTerm)
(genls WhoTeachesCourseQuarter AcademicYear)
(genls WhoTeachesCourseQuarter AcademicQuarter)
(comment WhoTeachesCourseQuarter
  "WhoTeachesCourseQuarter indicates that the sentence is
  asking for who the instructor is of a course for a given quarter and year")

(isa introducesInstructor Predicate)
(arity introducesInstructor 2)
(arg1Isa introducesInstructor IBTGeneration)
(arg2Isa introducesInstructor Thing)
(comment introducesInstructor
  "(introducesInstructor ?pef ?po) indicates that there is a presentation
 event ?pef which constitutes an instructor who teaches a course")

(<== (narrativeFunction (PresentationEventFn ?sid ?event-id)
                        ?instructor WhoTeachesCourseQuarter)
     (introducesInstructor ?sid ?instructor)
     ;; Introduce constant for the event ID
     (individualSatisfyingConditions 
      ?event-id IBTGeneration
      (TheSet (groundExpression ?instructor))))

(<== (introducesInstructor ?sid
                                     ?instructor)
     (ist-Information (DrsCaseFn ?sid)
       (discourseCaseForDrs ?dcase ?sid))
     (ist-Information ?dcase (isaPossibleCaseForSentence ?sdrs-id ?sid))
     (sentenceIndicatesInstructor ?sdrs-id ?teach)
     (sentenceIndicatesCourse ?sdrs-id ?course)
     (sentenceIndicatesAcademicQuarter ?sdrs-id ?quarter)
     (sentenceIndicatesYear ?sdrs-id ?year)
     (sentenceOffersInstructor ?sdrs-id ?teach ?course ?quarter ?year ?instructor))


;;; Looking for verbs that suggest a teaching ("teaches")
(isa sentenceIndicatesInstructor Predicate)
(arity sentenceIndicatesInstructor 2)
(arg1Isa sentenceIndicatesInstructor CycLTerm)
(arg2Isa sentenceIndicatesInstructor Thing)
(comment sentenceIndicatesInstructor 
  "(sentenceIndicatesInstructor ?sdrs-id ?teaching-verb) indicates that the sentences
 whose DRS is ?sdrs-id has a verb suggesting a course is being taught, ?teaching-verb")

(<== (sentenceIndicatesInstructor ?sdrs-id ?teaching-verb)
     (ist-Information (DrsCaseFn ?sdrs-id)
       (isa ?teaching-verb Teaching)))


;;; Looking for noun that indicates AcademicQuarter ("quarter")
(isa sentenceIndicatesAcademicQuarter Predicate)
(arity sentenceIndicatesAcademicQuarter 2)
(arg1Isa sentenceIndicatesAcademicQuarter CyclTerm)
(arg2Isa sentenceIndicatesAcademicQuarter Thing)
  "(sentenceIndicatesAcademicQuarter ?sdrs-id ?quarter) indicates that the sentences
 whose DRS is ?sdrs-id has a noun suggesting a AcademicQuarter, ?quarter")

 (<== (sentenceIndicatesAcademicQuarter ?sdrs-id ?quarter)
     (ist-Information (DrsCaseFn ?sdrs-id)
       (isa ?quarter AcademicQuarter)))


;;; Looking for noun that indicates course ("course")
;;; Note: Want to take course title or shorthand ("cs 336")
(isa sentenceIndicatesCSCourse Predicate)
(arity sentenceIndicatesCSCourse 2)
(arg1Isa sentenceIndicatesCSCourse CyclTerm)
(arg2Isa sentenceIndicatesCSCourse Thing)
  "(sentenceIndicatesCSCourse ?sdrs-id ?cscourse) indicates that the sentences
 whose DRS is ?sdrs-id has a noun suggesting a NUClass-CS, ?cscourse")

 (<== (sentenceIndicatesCSCourse ?sdrs-id ?cscourse)
     (ist-Information (DrsCaseFn ?sdrs-id)
       (isa ?cscourse NUClass-CS)))

;;; Looking for number that indicates year ("2020")
(isa sentenceIndicatesYear Predicate)
(arity sentenceIndicatesYear 2)
(arg1Isa sentenceIndicatesYear CyclTerm)
(arg2Isa sentenceIndicatesYear Thing)
  "(sentenceIndicatesYear ?sdrs-id ?year) indicates that the sentences
 whose DRS is ?sdrs-id has an integer suggesting a year, ?year")

 (<== (sentenceIndicatesYear ?sdrs-id ?year)
     (ist-Information (DrsCaseFn ?sdrs-id)
       (or (isa ?year Integer)
           (isa ?year Number))))


(isa sentenceOffersInstructor Predicate)
(arity sentenceOffersInstructor 6)
(arg1Isa sentenceOffersInstructor CycLTerm)
(arg2Isa sentenceOffersInstructor Thing)
(arg3Isa sentenceOffersInstructor Thing)
(arg4Isa sentenceOffersInstructor Thing)
(arg5Isa sentenceOffersInstructor Thing)
(comment sentenceOffersInstructor
  "(sentenceOffersInstructor ?sdrs-id ?teach ?course ?quarter ?year ?instructorGiven) 
  indicates that in sentence DRS ?sdrs-id, with verb indicating something is being taught ?teach,
  noun indicating a course ?course, noun indicating a quarter ?quarter, and a number indicating
  a year ?year, the instructor given is ?instructorGiven.")

(<== (sentenceOffersInstructor ?sdrs-id ?teach ?course ?quarter ?year ?instructorGiven)
     (ist-Information (DrsCaseFn ?sdrs-id)
     (instructor ?teach ?instructorGiven)
     (reasonableInstructor ?instructorGiven ?course ?quarter ?year))


(isa reasonableInstructor Predicate)
(arity reasonableInstructor 4)
(arg1Isa reasonableInstructor Thing)
(arg2Isa reasonableInstructor NUClass-CS)
(arg3Isa reasonableInstructor AcademicQuarter)
(arg4Isa reasonableInstructor Number)
(comment reasonableInstructor "(reasonableInstructor ?instructor ?course ?quarter ?year) holds when ?instructor is 
an instructor for the course.")

(<== (reasonableInstructor ?instructor ?course ?quarter ?year)
	(kbOnly
	 (useTransitiveInference
	  (ist-Information UniversalVocabularyMt
	   (isa (courseInstructor (CourseOfferingFn ?course (?quarter (AcademicYearFn NorthwesternUniversity (YearFn ?year))))) ?instructor)))))


;; Still in the works to figure out how
;; To get it to pick up a CS course
;; (in-microtheory FrameNetSemTransMt)
;; (FNNounSemtrans (TheList) Course-TheWord (and (isa :NOUN AcademicTerm))
;;  (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))
